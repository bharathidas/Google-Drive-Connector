// This file was generated by Mendix Studio Pro.
//
// WARNING: Code you write here will be lost the next time you deploy the project.

package googleconnectoroauth2.proxies;

public class TokenResponse
{
	private final com.mendix.systemwideinterfaces.core.IMendixObject tokenResponseMendixObject;

	private final com.mendix.systemwideinterfaces.core.IContext context;

	/**
	 * Internal name of this entity
	 */
	public static final java.lang.String entityName = "GoogleConnectorOAuth2.TokenResponse";

	/**
	 * Enum describing members of this entity
	 */
	public enum MemberNames
	{
		Access_token("Access_token"),
		Expires_in("Expires_in"),
		Refresh_token("Refresh_token"),
		Scope("Scope"),
		Token_type("Token_type");

		private final java.lang.String metaName;

		MemberNames(java.lang.String s)
		{
			metaName = s;
		}

		@java.lang.Override
		public java.lang.String toString()
		{
			return metaName;
		}
	}

	public TokenResponse(com.mendix.systemwideinterfaces.core.IContext context)
	{
		this(context, com.mendix.core.Core.instantiate(context, entityName));
	}

	protected TokenResponse(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixObject tokenResponseMendixObject)
	{
		if (tokenResponseMendixObject == null) {
			throw new java.lang.IllegalArgumentException("The given object cannot be null.");
		}
		if (!com.mendix.core.Core.isSubClassOf(entityName, tokenResponseMendixObject.getType())) {
			throw new java.lang.IllegalArgumentException(String.format("The given object is not a %s", entityName));
		}	

		this.tokenResponseMendixObject = tokenResponseMendixObject;
		this.context = context;
	}

	/**
	 * @deprecated Use 'TokenResponse.load(IContext, IMendixIdentifier)' instead.
	 */
	@java.lang.Deprecated
	public static googleconnectoroauth2.proxies.TokenResponse initialize(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixIdentifier mendixIdentifier) throws com.mendix.core.CoreException
	{
		return googleconnectoroauth2.proxies.TokenResponse.load(context, mendixIdentifier);
	}

	/**
	 * Initialize a proxy using context (recommended). This context will be used for security checking when the get- and set-methods without context parameters are called.
	 * The get- and set-methods with context parameter should be used when for instance sudo access is necessary (IContext.createSudoClone() can be used to obtain sudo access).
	 * @param context The context to be used
	 * @param mendixObject The Mendix object for the new instance
	 * @return a new instance of this proxy class
	 */
	public static googleconnectoroauth2.proxies.TokenResponse initialize(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixObject mendixObject)
	{
		return new googleconnectoroauth2.proxies.TokenResponse(context, mendixObject);
	}

	public static googleconnectoroauth2.proxies.TokenResponse load(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixIdentifier mendixIdentifier) throws com.mendix.core.CoreException
	{
		com.mendix.systemwideinterfaces.core.IMendixObject mendixObject = com.mendix.core.Core.retrieveId(context, mendixIdentifier);
		return googleconnectoroauth2.proxies.TokenResponse.initialize(context, mendixObject);
	}

	/**
	 * Commit the changes made on this proxy object.
	 * @throws com.mendix.core.CoreException
	 */
	public final void commit() throws com.mendix.core.CoreException
	{
		com.mendix.core.Core.commit(context, getMendixObject());
	}

	/**
	 * Commit the changes made on this proxy object using the specified context.
	 * @throws com.mendix.core.CoreException
	 */
	public final void commit(com.mendix.systemwideinterfaces.core.IContext context) throws com.mendix.core.CoreException
	{
		com.mendix.core.Core.commit(context, getMendixObject());
	}

	/**
	 * Delete the object.
	 */
	public final void delete()
	{
		com.mendix.core.Core.delete(context, getMendixObject());
	}

	/**
	 * Delete the object using the specified context.
	 */
	public final void delete(com.mendix.systemwideinterfaces.core.IContext context)
	{
		com.mendix.core.Core.delete(context, getMendixObject());
	}
	/**
	 * @return value of Access_token
	 */
	public final java.lang.String getAccess_token()
	{
		return getAccess_token(getContext());
	}

	/**
	 * @param context
	 * @return value of Access_token
	 */
	public final java.lang.String getAccess_token(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.lang.String) getMendixObject().getValue(context, MemberNames.Access_token.toString());
	}

	/**
	 * Set value of Access_token
	 * @param access_token
	 */
	public final void setAccess_token(java.lang.String access_token)
	{
		setAccess_token(getContext(), access_token);
	}

	/**
	 * Set value of Access_token
	 * @param context
	 * @param access_token
	 */
	public final void setAccess_token(com.mendix.systemwideinterfaces.core.IContext context, java.lang.String access_token)
	{
		getMendixObject().setValue(context, MemberNames.Access_token.toString(), access_token);
	}

	/**
	 * @return value of Expires_in
	 */
	public final java.lang.Integer getExpires_in()
	{
		return getExpires_in(getContext());
	}

	/**
	 * @param context
	 * @return value of Expires_in
	 */
	public final java.lang.Integer getExpires_in(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.lang.Integer) getMendixObject().getValue(context, MemberNames.Expires_in.toString());
	}

	/**
	 * Set value of Expires_in
	 * @param expires_in
	 */
	public final void setExpires_in(java.lang.Integer expires_in)
	{
		setExpires_in(getContext(), expires_in);
	}

	/**
	 * Set value of Expires_in
	 * @param context
	 * @param expires_in
	 */
	public final void setExpires_in(com.mendix.systemwideinterfaces.core.IContext context, java.lang.Integer expires_in)
	{
		getMendixObject().setValue(context, MemberNames.Expires_in.toString(), expires_in);
	}

	/**
	 * @return value of Refresh_token
	 */
	public final java.lang.String getRefresh_token()
	{
		return getRefresh_token(getContext());
	}

	/**
	 * @param context
	 * @return value of Refresh_token
	 */
	public final java.lang.String getRefresh_token(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.lang.String) getMendixObject().getValue(context, MemberNames.Refresh_token.toString());
	}

	/**
	 * Set value of Refresh_token
	 * @param refresh_token
	 */
	public final void setRefresh_token(java.lang.String refresh_token)
	{
		setRefresh_token(getContext(), refresh_token);
	}

	/**
	 * Set value of Refresh_token
	 * @param context
	 * @param refresh_token
	 */
	public final void setRefresh_token(com.mendix.systemwideinterfaces.core.IContext context, java.lang.String refresh_token)
	{
		getMendixObject().setValue(context, MemberNames.Refresh_token.toString(), refresh_token);
	}

	/**
	 * @return value of Scope
	 */
	public final java.lang.String getScope()
	{
		return getScope(getContext());
	}

	/**
	 * @param context
	 * @return value of Scope
	 */
	public final java.lang.String getScope(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.lang.String) getMendixObject().getValue(context, MemberNames.Scope.toString());
	}

	/**
	 * Set value of Scope
	 * @param scope
	 */
	public final void setScope(java.lang.String scope)
	{
		setScope(getContext(), scope);
	}

	/**
	 * Set value of Scope
	 * @param context
	 * @param scope
	 */
	public final void setScope(com.mendix.systemwideinterfaces.core.IContext context, java.lang.String scope)
	{
		getMendixObject().setValue(context, MemberNames.Scope.toString(), scope);
	}

	/**
	 * @return value of Token_type
	 */
	public final java.lang.String getToken_type()
	{
		return getToken_type(getContext());
	}

	/**
	 * @param context
	 * @return value of Token_type
	 */
	public final java.lang.String getToken_type(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.lang.String) getMendixObject().getValue(context, MemberNames.Token_type.toString());
	}

	/**
	 * Set value of Token_type
	 * @param token_type
	 */
	public final void setToken_type(java.lang.String token_type)
	{
		setToken_type(getContext(), token_type);
	}

	/**
	 * Set value of Token_type
	 * @param context
	 * @param token_type
	 */
	public final void setToken_type(com.mendix.systemwideinterfaces.core.IContext context, java.lang.String token_type)
	{
		getMendixObject().setValue(context, MemberNames.Token_type.toString(), token_type);
	}

	/**
	 * @return the IMendixObject instance of this proxy for use in the Core interface.
	 */
	public final com.mendix.systemwideinterfaces.core.IMendixObject getMendixObject()
	{
		return tokenResponseMendixObject;
	}

	/**
	 * @return the IContext instance of this proxy, or null if no IContext instance was specified at initialization.
	 */
	public final com.mendix.systemwideinterfaces.core.IContext getContext()
	{
		return context;
	}

	@java.lang.Override
	public boolean equals(Object obj)
	{
		if (obj == this) {
			return true;
		}
		if (obj != null && getClass().equals(obj.getClass()))
		{
			final googleconnectoroauth2.proxies.TokenResponse that = (googleconnectoroauth2.proxies.TokenResponse) obj;
			return getMendixObject().equals(that.getMendixObject());
		}
		return false;
	}

	@java.lang.Override
	public int hashCode()
	{
		return getMendixObject().hashCode();
	}

	/**
	 * @return String name of this class
	 */
	public static java.lang.String getType()
	{
		return entityName;
	}

	/**
	 * @return String GUID from this object, format: ID_0000000000
	 * @deprecated Use getMendixObject().getId().toLong() to get a unique identifier for this object.
	 */
	@java.lang.Deprecated
	public java.lang.String getGUID()
	{
		return "ID_" + getMendixObject().getId().toLong();
	}
}
