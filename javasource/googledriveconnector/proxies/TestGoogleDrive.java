// This file was generated by Mendix Studio Pro.
//
// WARNING: Code you write here will be lost the next time you deploy the project.

package googledriveconnector.proxies;

public class TestGoogleDrive extends system.proxies.FileDocument
{
	/**
	 * Internal name of this entity
	 */
	public static final java.lang.String entityName = "GoogleDriveConnector.TestGoogleDrive";

	/**
	 * Enum describing members of this entity
	 */
	public enum MemberNames
	{
		DriveFileID("DriveFileID"),
		DriveFileName("DriveFileName"),
		Description("Description"),
		MimeType("MimeType"),
		ShowMetadata("ShowMetadata"),
		IncludeTrashFiles("IncludeTrashFiles"),
		FileID("FileID"),
		Name("Name"),
		DeleteAfterDownload("DeleteAfterDownload"),
		Contents("Contents"),
		HasContents("HasContents"),
		Size("Size");

		private final java.lang.String metaName;

		MemberNames(java.lang.String s)
		{
			metaName = s;
		}

		@java.lang.Override
		public java.lang.String toString()
		{
			return metaName;
		}
	}

	public TestGoogleDrive(com.mendix.systemwideinterfaces.core.IContext context)
	{
		this(context, com.mendix.core.Core.instantiate(context, entityName));
	}

	protected TestGoogleDrive(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixObject testGoogleDriveMendixObject)
	{
		super(context, testGoogleDriveMendixObject);
		if (!com.mendix.core.Core.isSubClassOf(entityName, testGoogleDriveMendixObject.getType())) {
			throw new java.lang.IllegalArgumentException(String.format("The given object is not a %s", entityName));
		}	
	}

	/**
	 * @deprecated Use 'TestGoogleDrive.load(IContext, IMendixIdentifier)' instead.
	 */
	@java.lang.Deprecated
	public static googledriveconnector.proxies.TestGoogleDrive initialize(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixIdentifier mendixIdentifier) throws com.mendix.core.CoreException
	{
		return googledriveconnector.proxies.TestGoogleDrive.load(context, mendixIdentifier);
	}

	/**
	 * Initialize a proxy using context (recommended). This context will be used for security checking when the get- and set-methods without context parameters are called.
	 * The get- and set-methods with context parameter should be used when for instance sudo access is necessary (IContext.createSudoClone() can be used to obtain sudo access).
	 * @param context The context to be used
	 * @param mendixObject The Mendix object for the new instance
	 * @return a new instance of this proxy class
	 */
	public static googledriveconnector.proxies.TestGoogleDrive initialize(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixObject mendixObject)
	{
		return new googledriveconnector.proxies.TestGoogleDrive(context, mendixObject);
	}

	public static googledriveconnector.proxies.TestGoogleDrive load(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixIdentifier mendixIdentifier) throws com.mendix.core.CoreException
	{
		com.mendix.systemwideinterfaces.core.IMendixObject mendixObject = com.mendix.core.Core.retrieveId(context, mendixIdentifier);
		return googledriveconnector.proxies.TestGoogleDrive.initialize(context, mendixObject);
	}

	public static java.util.List<googledriveconnector.proxies.TestGoogleDrive> load(com.mendix.systemwideinterfaces.core.IContext context, java.lang.String xpathConstraint) throws com.mendix.core.CoreException
	{
		return com.mendix.core.Core.createXPathQuery(String.format("//%1$s%2$s", entityName, xpathConstraint))
			.execute(context)
			.stream()
			.map(obj -> googledriveconnector.proxies.TestGoogleDrive.initialize(context, obj))
			.collect(java.util.stream.Collectors.toList());
	}

	/**
	 * @return value of DriveFileID
	 */
	public final java.lang.String getDriveFileID()
	{
		return getDriveFileID(getContext());
	}

	/**
	 * @param context
	 * @return value of DriveFileID
	 */
	public final java.lang.String getDriveFileID(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.lang.String) getMendixObject().getValue(context, MemberNames.DriveFileID.toString());
	}

	/**
	 * Set value of DriveFileID
	 * @param drivefileid
	 */
	public final void setDriveFileID(java.lang.String drivefileid)
	{
		setDriveFileID(getContext(), drivefileid);
	}

	/**
	 * Set value of DriveFileID
	 * @param context
	 * @param drivefileid
	 */
	public final void setDriveFileID(com.mendix.systemwideinterfaces.core.IContext context, java.lang.String drivefileid)
	{
		getMendixObject().setValue(context, MemberNames.DriveFileID.toString(), drivefileid);
	}

	/**
	 * @return value of DriveFileName
	 */
	public final java.lang.String getDriveFileName()
	{
		return getDriveFileName(getContext());
	}

	/**
	 * @param context
	 * @return value of DriveFileName
	 */
	public final java.lang.String getDriveFileName(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.lang.String) getMendixObject().getValue(context, MemberNames.DriveFileName.toString());
	}

	/**
	 * Set value of DriveFileName
	 * @param drivefilename
	 */
	public final void setDriveFileName(java.lang.String drivefilename)
	{
		setDriveFileName(getContext(), drivefilename);
	}

	/**
	 * Set value of DriveFileName
	 * @param context
	 * @param drivefilename
	 */
	public final void setDriveFileName(com.mendix.systemwideinterfaces.core.IContext context, java.lang.String drivefilename)
	{
		getMendixObject().setValue(context, MemberNames.DriveFileName.toString(), drivefilename);
	}

	/**
	 * @return value of Description
	 */
	public final java.lang.String getDescription()
	{
		return getDescription(getContext());
	}

	/**
	 * @param context
	 * @return value of Description
	 */
	public final java.lang.String getDescription(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.lang.String) getMendixObject().getValue(context, MemberNames.Description.toString());
	}

	/**
	 * Set value of Description
	 * @param description
	 */
	public final void setDescription(java.lang.String description)
	{
		setDescription(getContext(), description);
	}

	/**
	 * Set value of Description
	 * @param context
	 * @param description
	 */
	public final void setDescription(com.mendix.systemwideinterfaces.core.IContext context, java.lang.String description)
	{
		getMendixObject().setValue(context, MemberNames.Description.toString(), description);
	}

	/**
	 * @return value of MimeType
	 */
	public final java.lang.String getMimeType()
	{
		return getMimeType(getContext());
	}

	/**
	 * @param context
	 * @return value of MimeType
	 */
	public final java.lang.String getMimeType(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.lang.String) getMendixObject().getValue(context, MemberNames.MimeType.toString());
	}

	/**
	 * Set value of MimeType
	 * @param mimetype
	 */
	public final void setMimeType(java.lang.String mimetype)
	{
		setMimeType(getContext(), mimetype);
	}

	/**
	 * Set value of MimeType
	 * @param context
	 * @param mimetype
	 */
	public final void setMimeType(com.mendix.systemwideinterfaces.core.IContext context, java.lang.String mimetype)
	{
		getMendixObject().setValue(context, MemberNames.MimeType.toString(), mimetype);
	}

	/**
	 * @return value of ShowMetadata
	 */
	public final java.lang.Boolean getShowMetadata()
	{
		return getShowMetadata(getContext());
	}

	/**
	 * @param context
	 * @return value of ShowMetadata
	 */
	public final java.lang.Boolean getShowMetadata(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.lang.Boolean) getMendixObject().getValue(context, MemberNames.ShowMetadata.toString());
	}

	/**
	 * Set value of ShowMetadata
	 * @param showmetadata
	 */
	public final void setShowMetadata(java.lang.Boolean showmetadata)
	{
		setShowMetadata(getContext(), showmetadata);
	}

	/**
	 * Set value of ShowMetadata
	 * @param context
	 * @param showmetadata
	 */
	public final void setShowMetadata(com.mendix.systemwideinterfaces.core.IContext context, java.lang.Boolean showmetadata)
	{
		getMendixObject().setValue(context, MemberNames.ShowMetadata.toString(), showmetadata);
	}

	/**
	 * @return value of IncludeTrashFiles
	 */
	public final java.lang.Boolean getIncludeTrashFiles()
	{
		return getIncludeTrashFiles(getContext());
	}

	/**
	 * @param context
	 * @return value of IncludeTrashFiles
	 */
	public final java.lang.Boolean getIncludeTrashFiles(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.lang.Boolean) getMendixObject().getValue(context, MemberNames.IncludeTrashFiles.toString());
	}

	/**
	 * Set value of IncludeTrashFiles
	 * @param includetrashfiles
	 */
	public final void setIncludeTrashFiles(java.lang.Boolean includetrashfiles)
	{
		setIncludeTrashFiles(getContext(), includetrashfiles);
	}

	/**
	 * Set value of IncludeTrashFiles
	 * @param context
	 * @param includetrashfiles
	 */
	public final void setIncludeTrashFiles(com.mendix.systemwideinterfaces.core.IContext context, java.lang.Boolean includetrashfiles)
	{
		getMendixObject().setValue(context, MemberNames.IncludeTrashFiles.toString(), includetrashfiles);
	}

	@java.lang.Override
	public boolean equals(Object obj)
	{
		if (obj == this) {
			return true;
		}
		if (obj != null && getClass().equals(obj.getClass()))
		{
			final googledriveconnector.proxies.TestGoogleDrive that = (googledriveconnector.proxies.TestGoogleDrive) obj;
			return getMendixObject().equals(that.getMendixObject());
		}
		return false;
	}

	@java.lang.Override
	public int hashCode()
	{
		return getMendixObject().hashCode();
	}

	/**
	 * @return String name of this class
	 */
	public static java.lang.String getType()
	{
		return entityName;
	}

	/**
	 * @return String GUID from this object, format: ID_0000000000
	 * @deprecated Use getMendixObject().getId().toLong() to get a unique identifier for this object.
	 */
	@java.lang.Override
	@java.lang.Deprecated
	public java.lang.String getGUID()
	{
		return "ID_" + getMendixObject().getId().toLong();
	}
}
